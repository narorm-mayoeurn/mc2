<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:security="http://www.springframework.org/schema/security"
	xsi:schemaLocation="
	   	http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

	<security:global-method-security
		pre-post-annotations="enabled" />

	<security:authentication-manager alias="authenticationManager">
		<security:authentication-provider>
			<security:password-encoder hash="plaintext" />
			<security:jdbc-user-service
				data-source-ref="dataSource"
				users-by-username-query="select username,password,enabled from authentication where username=?"
				authorities-by-username-query="select u1.username, u2.authority
								from authentication u1, authority u2 where u1.username=u2.username and u1.username=?" />
		</security:authentication-provider>
	</security:authentication-manager>

	<bean id="filterChainProxy" class="org.springframework.security.web.FilterChainProxy">
		<constructor-arg>
			<list>
				<security:filter-chain pattern="/**"
					filters="securityContextPersistenceFilter" />
			</list>
		</constructor-arg>
	</bean>
	
	<bean id="securityContextPersistenceFilter" class="org.springframework.security.web.context.SecurityContextPersistenceFilter"/>

</beans>
